apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'application'

// nexus staging plugin for CI
// https://github.com/Codearte/gradle-nexus-staging-plugin/
apply plugin: 'io.codearte.nexus-staging'


mainClassName = "com.opswat.metadefender.core.clientexample.Example"

run {
    if ( project.hasProperty("appArgs") ) {
        args Eval.me(appArgs)
    }
}


repositories {
    mavenCentral()
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile 'com.fasterxml.jackson.core:jackson-core:2.7.5'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.7.5'

    testCompile 'junit:junit:4.12'
    testCompile "com.github.tomakehurst:wiremock:2.1.4-rc3"
}


buildscript {
    repositories {
        mavenCentral()
        //Needed only for SNAPSHOT versions
        //maven { url "http://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3"
    }
}

nexusStaging {
    numberOfRetries = 12
}


jar {
    baseName = 'metadefender-core-client'
    version =  '4.0.0'
    exclude('com/opswat/metadefender/core/clientexample/**')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.14'
}


//create a single Jar with all dependencies
task createJar(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'Metadefender Core Client',
                'Implementation-Version': jar.version
    }
    baseName = jar.baseName + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
    exclude('com/opswat/metadefender/core/clientexample/**')
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
    exclude('com/opswat/metadefender/core/clientexample/**')
}


artifacts {
    archives javadocJar, sourcesJar
}

group = "com.opswat"
archivesBaseName = jar.baseName
version = jar.version



if (hasProperty('ossrhUsername') && hasProperty('ossrhPassword')) {
    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Metadefender Core Client'
                    packaging 'jar'
                    // optionally artifactId can be defined here
                    description 'Java7 library to easily use the Metadefender Core API'
                    url 'https://github.com/OPSWAT/Metadefender-Core-Client'

                    scm {
                        connection 'scm:git:https://github.com/OPSWAT/Metadefender-Core-Client'
                        developerConnection 'scm:git:https://github.com/OPSWAT/Metadefender-Core-Client'
                        url 'https://github.com/OPSWAT/Metadefender-Core-Client'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'kristof.dombi'
                            name 'Kristof Dombi'
                            email 'kristof.dombi@opswat.com'
                        }
                    }
                }
            }
        }
    }
}
